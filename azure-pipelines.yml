stages:
- stage: validate
  jobs:
  - job: validate
  steps:
  - task: TerraformInstaller@0
    displayName: init
    inputs:
      terraformVersion: '0.13.5'
  - task: TerraformTaskV1@0
    inputs:
      provider: 'azurerm'
      command: 'init'
      backendServiceArm: 'mgt-rg'
      backendAzureRmResourceGroupName: 'mgt-rg'
      backendAzureRmStorageAccountName: 'tfstatesasoops'
      backendAzureRmContainerName: 'tfstatestorage'
      backendAzureRmKey: 'terraform.state'
  - task: TerraformTaskV1@0
    displayName: 'validate'
    inputs:
      provider: 'azurerm'
      command: 'validate'
- stage: deploy
  jobs:
  - deployment: deploy_tf
    continueOnError: false
    environment: 'dev'
    strategy:
     runOnce:
       deploy:
        steps:
        - checkout: self
        - task: TerraformInstaller@0
          displayName: 'install'
          inputs:
            terraformVersion: '0.13.5'
        - task: TerraformTaskV1@0
          displayName: 'init'
          inputs:
            provider: 'azurerm'
            command: 'init'
            backendServiceArm: 'mgt-rg'
            backendAzureRmResourceGroupName: 'mgt-rg'
            backendAzureRmStorageAccountName: 'tfstatesasoops'
            backendAzureRmContainerName: 'tfstatestorage'
            backendAzureRmKey: 'terraform.tfstate'
        - task: TerraformTaskV1@0
          inputs:
            provider: 'azurerm'
            command: 'plan'
            commandOptions: '--var-file standup.tfvars'
            environmentServiceNameAzureRM: 'mgt-rg'
